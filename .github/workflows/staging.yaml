name: build

on:
  push:
    branches: [ staging ]

jobs:
  java:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: 'deployment pending'
      uses: 'chrnorm/deployment-action@releases/v1'
      id: deployment
      with:
        token: '${{ github.token }}'
        environment: 'staging'
        target_url: 'https://staging.elsa-hilft.ch'
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - uses: actions/cache@v1
      with:
        path: backend/build/jib-cache
        key: ${{ runner.os }}-jib
        restore-keys: |
          ${{ runner.os }}-jib
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Build image
      run: |
        cd backend
        ./gradlew jibDockerBuild
    - name: Push
      run: |
        git_hash=$(git rev-parse --short "$GITHUB_SHA")
        git_branch=${GITHUB_REF##*/}
        echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
        docker tag elsa-hilft/backend docker.pkg.github.com/elsahilftdigital/main/backend-staging:$git_branch
        docker tag elsa-hilft/backend docker.pkg.github.com/elsahilftdigital/main/backend-staging:$git_hash
        docker push docker.pkg.github.com/elsahilftdigital/main/backend-staging:$git_branch
        docker push docker.pkg.github.com/elsahilftdigital/main/backend-staging:$git_hash
      env:
        GITHUB_PACKAGE_REGISTRY_TOKEN: ${{ secrets.GITHUB_PACKAGE_REGISTRY_TOKEN }}
    - name: Deploy
      run: |
        export git_hash=$(git rev-parse --short "$GITHUB_SHA")
        curl --user "pusher:${SECRET}" --silent --show-error --fail -X POST -d "{\"name\": \"docker.pkg.github.com/elsahilftdigital/main/backend-staging\", \"tag\": \"${git_hash}\"}" 'https://gcp.elsa-hilft.ch/v1/webhooks/native'
      env:
        SECRET: ${{ secrets.KEEL_SECRET }}
    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: 'https://staging.elsa-hilft.ch'
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        target_url: 'https://staging.elsa-hilft.ch'
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

  public-ui:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-public-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-public-node-
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Build public frontend
      run: |
        cd frontend/public
        npm install
        export REACT_APP_BACKEND_URL=https://staging.elsa-hilft.ch/api
        npm run build
    - name: Publish public frontend to GCS
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: elsa-hilft-digital
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        CLI: gsutil
      with:
        args: -m rsync -d -r frontend/public/build gs://staging.elsa-hilft.ch
  admin-ui:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-admin-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-admin-node-
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Build admin frontend
      run: |
        cd frontend/admin
        npm install
        export REACT_APP_BACKEND_URL=https://admin-staging.elsa-hilft.ch/api
        npm run build
    - name: Publish admin frontend to GCS
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: elsa-hilft-digital
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        CLI: gsutil
      with:
        args: -m rsync -d -r frontend/admin/build gs://admin-staging.elsa-hilft.ch
